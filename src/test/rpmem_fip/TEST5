#!/usr/bin/env bash
#
# Copyright 2019, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# src/test/rpmem_fip/TEST5 -- test TX size evaluation
#


# standard unit test setup
. ../unittest/unittest.sh

require_test_type medium

setup

. setup.sh

function rpmem_fip_test()
{
	local tx_size=$1
	expect_normal_exit run_on_node 1 ./rpmem_fip$EXESUFFIX\
		client_tx_size ${NODE_ADDR[0]} $RPMEM_PROVIDER $RPMEM_PM\
		$tx_size
}

# TX size is common for all lanes
export RPMEM_MAX_NLANES=1
export_vars_node 1 RPMEM_MAX_NLANES

UINT_MAX=$((2**32))
TOO_LARGE=$((UINT_MAX + 1))
TX_SIZE_VALUES=(8 -1 0 1 $TOO_LARGE)

for tx_size in ${TX_SIZE_VALUES[@]}; do
	# limit size of TX queue
	export RPMEM_TX_SIZE=$tx_size
	export_vars_node 1 RPMEM_TX_SIZE

	rpmem_fip_test $tx_size
done

# relative values
TX_SIZE_VALUES=("LT_MAX_TX_SIZE" "EQ_MAX_TX_SIZE" "GT_MAX_TX_SIZE")

for tx_size in ${TX_SIZE_VALUES[@]}; do
	# RPMEM_TX_SIZE will be set according to maximum supported TX size
	rpmem_fip_test $tx_size
done

pass
